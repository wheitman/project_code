$date
	Tue May  3 13:32:00 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module datapath_tb $end
$var wire 8 ! imm [7:0] $end
$var wire 28 " instr [27:0] $end
$var wire 4 # next_st [3:0] $end
$var wire 36 $ r5 [35:0] $end
$var wire 36 % r8 [35:0] $end
$var wire 5 & ra1 [4:0] $end
$var wire 5 ' ra2 [4:0] $end
$var wire 1 ( sel $end
$var wire 4 ) st [3:0] $end
$var wire 1 * subclk $end
$var wire 1 + we $end
$var reg 1 , clk $end
$var reg 36 - mem_data [35:0] $end
$var reg 1 . reset $end
$var integer 32 / i [31:0] $end
$scope module uut $end
$var wire 5 0 aluOP [4:0] $end
$var wire 1 , clk $end
$var wire 36 1 mem_data [35:0] $end
$var wire 1 . reset $end
$var wire 1 2 write_enable $end
$var wire 36 3 write_data [35:0] $end
$var wire 5 4 read2_addr [4:0] $end
$var wire 5 5 read1_addr [4:0] $end
$var wire 5 6 opcode [4:0] $end
$var wire 28 7 instruction [27:0] $end
$var wire 8 8 immediate [7:0] $end
$var wire 1 9 imm_select $end
$var wire 4 : flags [3:0] $end
$var wire 36 ; databus [35:0] $end
$var wire 1 < control_instruction $end
$var wire 36 = alu_in2 [35:0] $end
$var wire 36 > alu_in1 [35:0] $end
$scope module alu1 $end
$var wire 5 ? op [4:0] $end
$var wire 36 @ in2 [35:0] $end
$var wire 36 A in1 [35:0] $end
$var reg 1 B Cout $end
$var reg 4 C flags [3:0] $end
$var reg 36 D out [35:0] $end
$upscope $end
$scope module control $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 5 E opcode [4:0] $end
$var reg 1 < control_instruction $end
$var reg 1 9 imm_select $end
$var reg 4 F next_state [3:0] $end
$var reg 4 G state [3:0] $end
$var reg 1 2 write_enable $end
$upscope $end
$scope module decode $end
$var wire 32 H decoded [31:0] $end
$var wire 5 I reg_source [4:0] $end
$var wire 5 J reg_dest [4:0] $end
$var wire 5 K opcode [4:0] $end
$var wire 28 L instruction [27:0] $end
$var wire 8 M immediate [7:0] $end
$upscope $end
$scope module imm_mux $end
$var wire 36 N data0 [35:0] $end
$var wire 36 O data1 [35:0] $end
$var wire 1 9 select $end
$var reg 36 P out [35:0] $end
$upscope $end
$scope module iregister $end
$var wire 1 , clk $end
$var wire 1 < en $end
$var wire 28 Q in_data [27:0] $end
$var reg 28 R instruction [27:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 , clk $end
$var wire 5 S read1_addr [4:0] $end
$var wire 5 T read2_addr [4:0] $end
$var wire 5 U write_addr [4:0] $end
$var wire 36 V write_data [35:0] $end
$var wire 1 2 write_enable $end
$var reg 36 W read1 [35:0] $end
$var reg 36 X read2 [35:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx X
bx W
b0xxxxxxxx V
bx U
bx T
b0xxx S
bx R
b11000101000000000000010100 Q
b0xxxxxxxx P
bx O
b0xxxxxxxx N
bx M
bx L
bx K
bx J
b0xxx I
bz H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bz ?
bx >
bx =
x<
bx ;
bx :
x9
bx 8
bx 7
bx 6
b0xxx 5
bx 4
b0xxxxxxxx 3
x2
b11000101000000000000010100 1
bz 0
bx /
0.
b11000101000000000000010100 -
0,
x+
0*
bx )
x(
bx '
b0xxx &
bx %
bx $
bx #
bx "
bx !
$end
#100000
bx 3
bx P
bx V
b1 #
b1 F
0+
02
1(
19
1<
b0 )
b0 G
1*
1,
b0 /
1.
#200000
0*
0,
b1 /
#300000
1<
b1 #
b1 F
b10100 N
b10100 !
b10100 8
b10100 M
b0 &
b0 5
b0 I
b0 S
b101 '
b101 4
b101 J
b101 T
b101 U
b110 6
b110 E
b110 K
b11000101000000000000010100 "
b11000101000000000000010100 7
b11000101000000000000010100 L
b11000101000000000000010100 R
1*
1,
b10 /
#400000
0*
0,
0.
b0 /
#500000
b10100 3
b10100 P
b10100 V
1+
12
0(
09
0<
b10 #
b10 F
b0 >
b0 A
b0 W
b1 )
b1 G
1*
1,
b1 /
#600000
0*
0,
b10 /
#700000
bx 3
bx P
bx V
0+
02
1(
19
b0 #
b0 F
b10 )
b10 G
b10100 $
1*
1,
b11 /
#800000
0*
0,
b100 /
#900000
1<
b1 #
b1 F
b10100 =
b10100 @
b10100 X
b0 )
b0 G
1*
1,
b101 /
#1000000
b11001000000000000000010110 Q
0*
0,
b11001000000000000000010110 -
b11001000000000000000010110 1
b110 /
#1100000
b10110 3
b10110 P
b10110 V
1+
12
0(
09
0<
b10 #
b10 F
b10110 N
b10110 !
b10110 8
b10110 M
b1000 '
b1000 4
b1000 J
b1000 T
b1000 U
b1 )
b1 G
b11001000000000000000010110 "
b11001000000000000000010110 7
b11001000000000000000010110 L
b11001000000000000000010110 R
1*
1,
#1200000
0*
0,
#1300000
bx 3
bx P
bx V
0+
02
1(
19
b0 #
b0 F
bx =
bx @
bx X
b10110 %
b10 )
b10 G
1*
1,
#1400000
0*
0,
#1500000
1<
b1 #
b1 F
b0 )
b0 G
b10110 =
b10110 @
b10110 X
1*
1,
#1600000
0*
0,
